{"version":3,"sources":["ListItems.js","App.js","index.js"],"names":["ListItems","props","listItems","items","map","item","react_default","a","createElement","className","key","type","id","value","text","onChange","e","setUpdate","target","index_es","icon","onClick","deleteItem","react_flip_move_es","duration","easing","library","add","faTrash","App","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","currentItem","handleInput","bind","assertThisInitialized","addItem","setState","Date","now","preventDefault","newItem","newItems","concat","toConsumableArray","filteredItems","filter","console","log","onSubmit","placeholder","src_ListItems","React","Component","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.8fc59b42.chunk.js","sourcesContent":["import React from \"react\"\r\nimport \"./ListItems.css\"\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport FlipMove from 'react-flip-move';\r\n\r\n\r\nfunction ListItems(props) {\r\n\r\n    const items = props.items\r\n    //Now we are going to retrieve the array elements with the help of a map and then return them as a list\r\n    //to the ListItems component in App.js\r\n\r\n    const listItems = items.map((item) => {\r\n        //We are going to return the array items as div so that we can individually style or manage the list items\r\n        return (\r\n            <div className=\"list\" key={item.key}>\r\n                <p>\r\n                    <input\r\n                        type=\"text\"\r\n                        id={item.key}\r\n                        value={item.text}\r\n                        onChange={(e) => {\r\n                            props.setUpdate(e.target.value, item.key)\r\n                        }}\r\n                    //Here we are adding the onChange listener to allow us to edit the value of the list items\r\n                    //This is done by receiving a method called setUpdate via props\r\n                    //We are going to pass in the value and the id of the list item that is to be edited \r\n                    />\r\n                    <span>\r\n                        <FontAwesomeIcon\r\n                            className=\"faicons\"\r\n                            icon=\"trash\"\r\n                            onClick={() => {\r\n                                props.deleteItem(item.key)\r\n                            }}\r\n                        />\r\n                    </span>\r\n                </p>\r\n            </div>\r\n        )\r\n    })\r\n\r\n    return (\r\n        //Return the list items created above back to the ListItems component\r\n        <div>\r\n            <FlipMove duration={300} easing=\"ease-in-out\">\r\n                {listItems}\r\n            </FlipMove>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ListItems","import React from 'react'\nimport './App.css'\nimport ListItems from \"./ListItems\"\nimport { library } from '@fortawesome/fontawesome-svg-core'\nimport { faTrash } from '@fortawesome/free-solid-svg-icons'\n\nlibrary.add(faTrash)\n\nclass App extends React.Component {\n\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      items: [],\n      currentItem: {\n        text: \"\",\n        key: \"\"\n      }\n    }\n\n    this.handleInput = this.handleInput.bind(this)\n    this.addItem = this.addItem.bind(this)\n    this.deleteItem = this.deleteItem.bind(this)\n    this.setUpdate = this.setUpdate.bind(this)\n  }\n\n  //This method is used to set change the text while we are entering the new task\n  handleInput(e) {\n    this.setState({\n      currentItem: {\n        text: e.target.value,\n        key: Date.now()   //We are adding this key field as this will serve as a timestamp\n        //when we will delete the items from the list \n      }\n    })\n  }\n\n  //This method is called when the submit button is pressed.\n  //This assigns the value of the current item to the text and key fields and\n  //adds a new item into the list\n  addItem(e) {\n    //This prevents the default action of the event which refreshes the page.\n    e.preventDefault()\n    //Now taking the new item into a variable and assigninng its value to the respective text and key field\n    const newItem = this.state.currentItem\n    //console.log(newItem)   This is just to test whether the value is correctly received or not\n\n    if (newItem.text !== \"\") {\n      //this adds the current item object into the array of items and create a new item with empty fields\n      //to store any other task \n      const newItems = [...this.state.items, newItem]\n      this.setState({\n        items: newItems,\n        currentItem: {\n          text: \"\",\n          key: \"\"\n        }\n\n      })\n    }\n\n  }\n\n  deleteItem(key) {\n\n    //Here we are making use of a function called filter which filter all those items whose key value is not equal\n    //to the key value of the item which we want to delete and then return an array\n\n    const filteredItems = this.state.items.filter(item => item.key !== key)\n    this.setState({ items: filteredItems })\n\n  }\n\n  //this method updates the text value in the list item by matching items with the key value that \n  //this method has received\n\n  setUpdate(text, key) {\n    console.log(\"items:\" + this.state.items);\n    const items = this.state.items;\n    items.map(item => {\n      if (item.key === key) {\n        console.log(item.key + \"    \" + key)\n        item.text = text;\n      }\n    })\n    this.setState({\n      items: items\n    })\n  }\n\n  //We have passed items in ListItems component which is the array of items stored in the items state\n  //Ite will be received as props in the ListItems functional component and then returned back in a list form\n  render() {\n    return (\n      <div className=\"App\">\n        <h1>My Todo</h1>\n        <header>\n          <form id=\"to-do-form\" onSubmit={this.addItem}>\n            <input\n              type=\"text\"\n              placeholder=\"Enter new task\"\n              value={this.state.currentItem.text}\n              onChange={this.handleInput}\n            />\n\n            <button type=\"submit\">Add</button>\n          </form>\n        </header>\n        <ListItems\n          items={this.state.items}\n          deleteItem={this.deleteItem}\n          setUpdate={this.setUpdate}\n        />\n      </div>\n    )\n  }\n}\n\nexport default App;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}